# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-21 12:53
from __future__ import unicode_literals

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('facebook', models.URLField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True)),
                ('donate_url', models.URLField(blank=True, max_length=255, null=True)),
                ('donate_note', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('descr', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='GiverMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(choices=[('NEW', 'New'), ('LN', 'Like New'), ('GOOD', 'Good'), ('OK', 'OK')], default='Good', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='Active', max_length=10)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('note', models.TextField(blank=True, null=True)),
                ('giver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('LOCAL', 'Local Temple'), ('INTERNET', 'Internet Group')], max_length=20)),
                ('address1', models.CharField(blank=True, max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('zipcode', models.CharField(blank=True, max_length=50)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('book_order_url', models.URLField(blank=True, max_length=255)),
                ('book_list_url', models.URLField(blank=True, max_length=255)),
                ('donation_url', models.URLField(blank=True, max_length=255)),
                ('website_url', models.URLField(blank=True, max_length=255)),
                ('facebook', models.URLField(blank=True, max_length=255)),
                ('is_nonprofit', models.BooleanField(default=False)),
                ('local_pickup', models.BooleanField(default=False)),
                ('domestic_pay_shipping', models.BooleanField(default=False)),
                ('domestic_free_shipping', models.BooleanField(default=False)),
                ('international_free_shipping', models.BooleanField(default=False)),
                ('shipping_other', models.CharField(blank=True, max_length=255)),
                ('admin_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_url', models.URLField(blank=True, max_length=255)),
                ('order_url', models.URLField(blank=True, max_length=255)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('isbn_10', models.CharField(blank=True, max_length=100, null=True)),
                ('isbn_13', models.CharField(blank=True, max_length=100, null=True)),
                ('publisher_book_id', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pages', models.PositiveIntegerField(default=0)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('language', models.CharField(choices=[('en', 'English'), ('zh', 'Chinese'), ('o', 'Other')], max_length=10)),
                ('pic', models.ImageField(blank=True, null=True, upload_to=core.models.cover_pic_name, verbose_name='Upload Cover Picture')),
                ('pdf', models.FileField(blank=True, null=True, upload_to=core.models.pdf_name, verbose_name='Upload PDF File')),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('pdf_url', models.URLField(blank=True, max_length=255, null=True)),
                ('paperback', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('editor_pick', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('author', models.ManyToManyField(to='core.Author')),
                ('category', models.ManyToManyField(blank=True, null=True, to='core.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('payment_detail', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('PENDING', 'Pending'), ('CANCEL', 'Cancel'), ('PAID', 'Paid'), ('SHIPPED', 'Shipped')], default='NEW', max_length=10)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('ship_date', models.DateTimeField(blank=True, null=True)),
                ('pay_date', models.DateTimeField(blank=True, null=True)),
                ('cancel_date', models.DateTimeField(blank=True, null=True)),
                ('giver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='giver', to=settings.AUTH_USER_MODEL)),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.GiverMaterial')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True)),
                ('publish_free_book', models.BooleanField(default=False)),
                ('donate_url', models.URLField(blank=True, max_length=255, null=True)),
                ('donate_note', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.AddField(
            model_name='material',
            name='publisher',
            field=models.ManyToManyField(blank=True, null=True, to='core.Publisher'),
        ),
        migrations.AddField(
            model_name='groupmaterial',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Material'),
        ),
        migrations.AddField(
            model_name='givermaterial',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Material'),
        ),
        migrations.AlterUniqueTogether(
            name='givermaterial',
            unique_together=set([('giver', 'material')]),
        ),
    ]
